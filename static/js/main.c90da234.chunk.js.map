{"version":3,"sources":["components/QueriesBar/QueriesBar.js","components/ResultItem/ResultItem.js","components/ResultsList/ResultsList.js","util/GitHubAPI.js","components/App/App.js","index.js"],"names":["QueriesBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","description","location","fullTime","search","bind","assertThisInitialized","handleDescriptionChange","handleLocationChange","handleFullTimeChange","handleKeyDown","clearResults","inherits","createClass","key","value","_this$state","_this$state$descripti","_this$state$location","_this$state$fullTime","onSearch","onClear","e","setState","target","checked","react_default","a","createElement","className","placeholder","onChange","onKeyDown","type","onClick","Component","ResultItem","_ref","columns","position","index","map","_ref2","prop","ResultsList","sortColumn","direction","handleSort","setSortColumn","sortData","renderSortImage","newIndex","values","return","_this$state$sortColum","alert","positions","_this$state$sortColum2","sortByProp","sortedPositions","toConsumableArray","sort","b","toUpperCase","reverse","column","sortable","columnName","concat","_this2","snideRemark","name","ResultItem_ResultItem","parseDateString","dateString","newDate","Date","year","getFullYear","month","getMonth","day","getDay","GitHubAPI","arguments","length","undefined","stateSetCallback","requestParams","outputString","replace","parseRequestParams","fetch","method","mode","then","response","ok","json","Error","networkError","console","log","message","id","title","company","created_at","data","catch","err","App","searchResults","QueriesBar_QueriesBar_QueriesBar","ResultsList_ResultsList_ResultsList","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c90da234.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './QueriesBar.css';\n\nimport { inspect } from 'util';\n\nexport class QueriesBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      location: '',\n      fullTime: false\n    };\n    this.search = this.search.bind(this);\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleFullTimeChange = this.handleFullTimeChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.clearResults = this.clearResults.bind(this);\n  }\n\n  search() {\n    const { description='', location='', fullTime=false } = this.state;\n    // We'll handle search in the parent (App) component\n    this.props.onSearch(description, location, fullTime);\n  }\n\n  clearResults() {\n    this.props.onClear();\n  }\n\n  handleDescriptionChange(e) {\n    this.setState({ description: e.target.value });\n  }\n\n  handleLocationChange(e) {\n    this.setState({ location: e.target.value });\n  }\n\n  handleFullTimeChange(e) {\n    this.setState({ fullTime: e.target.checked });\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.search();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"QueriesBar\">\n        <input\n          className=\"text-field\"\n          placeholder=\"Enter a Job Title, Company, or Description\"\n          onChange={this.handleDescriptionChange}\n          onKeyDown={this.handleKeyDown}\n        />\n        <input\n          className=\"text-field\"\n          placeholder=\"Enter a City, State, ZIP Code, or Country\"\n          onChange={this.handleLocationChange}\n          onKeyDown={this.handleKeyDown}\n        />\n        <label>\n          <input\n            className=\"checkbox-field\"\n            type=\"checkbox\"\n            onChange={this.handleFullTimeChange}\n            onKeyDown={this.handleKeyDown}\n          />\n          <span className=\"label-text\">Show full-time positions only</span>\n        </label>\n\n        <button className=\"button-confirm\" onClick={this.search}>Search</button>\n        <button className=\"button-cancel\" onClick={this.clearResults}>Clear</button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './ResultItem.css';\n\nexport default function ResultItem({columns, position, index}) {\n  return (\n    <tr key={index}>\n      {\n        columns.map(({ prop }) => {\n          return (\n            <td>{position[prop]}</td>\n          );\n        })\n      }\n    </tr>\n  );\n};\n","import React, { Component } from 'react';\nimport './ResultsList.css';\n\nimport ResultItem from '../ResultItem/ResultItem.js'\n\nexport default class ResultsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortColumn: {\n        index: null,\n        direction: 'desc'\n      }\n    }\n    this.handleSort = this.handleSort.bind(this);\n    this.setSortColumn = this.setSortColumn.bind(this);\n    this.sortData = this.sortData.bind(this);\n    this.renderSortImage = this.renderSortImage.bind(this);\n  }\n\n  handleSort(e) {\n    const newIndex = Object.values(e.target)[0].key || Object.values(e.target)[0].return.key;\n    this.setSortColumn(newIndex);\n  }\n\n  setSortColumn(newIndex) {\n    const { index, direction } = this.state.sortColumn;\n    if (newIndex === index) {\n      switch (direction) {\n        case 'desc':\n          // if sort order is desc and sort is already on selected column,\n          // change to asc\n          this.setState({\n            sortColumn: {\n              index,\n              direction: 'asc'\n            }\n          });\n          break;\n        case 'asc':\n          // if sort order is asc and sort is already on selected column,\n          // change to desc, but set index to  \"null\" (turn off sort)\n          this.setState({\n            sortColumn: {\n              index: null,\n              direction: 'desc'\n            }\n          });\n          break;\n        default:\n          alert(\"well, this is awkward [ResultsList.setSortColumn()]\")\n      }\n    } else {\n      this.setState({\n        sortColumn: {\n          index: newIndex,\n          direction: 'desc'\n        }\n      })\n    }\n  }\n\n  sortData(positions, columns) {\n    const { index, direction } = this.state.sortColumn;\n    if (index) {\n      const sortByProp = columns[index].prop;\n      const sortFunc = (a, b) => {\n        if (a[sortByProp] === b[sortByProp]) return 0;\n        return a[sortByProp].toUpperCase() > b[sortByProp].toUpperCase() ? 1 : -1;\n      }\n      let sortedPositions = [...positions].sort(sortFunc);\n      if (direction === 'asc') {\n        sortedPositions.reverse()\n      }\n      return sortedPositions;\n    } else {\n        return positions;\n    }\n  }\n\n  renderSortImage(column, index) {\n    if (column.sortable) {\n      if (this.state.sortColumn.index == index) {\n        if (this.state.sortColumn.direction == 'asc') {\n          return (\n            <p className=\"sort-arrow\">⬆</p>\n          );\n          // return (\n          //   <img className=\"up-arrow\" alt=\"⬆\" />\n          // );\n        } else {\n          return (\n            <p className=\"sort-arrow\">⬇</p>\n          );\n          // return (\n          //   <img className=\"down-arrow\" alt=\"⬇\" />\n          // );\n        }\n      }\n      return (\n        <p className=\"sort-arrow\"></p>\n      );\n      // return (\n      //   <img className=\"placeholder\" alt=\"🗙\" />\n      // );\n    } else {\n      return (\n        <p className=\"sort-arrow\"></p>\n      );\n      // return (\n      //   <img className=\"no-sort\" alt=\"✖\" />\n      // );\n    }\n  }\n\n  snideRemark(columnName) {\n    alert(`Sorry, Kevin says you can't sort by ${columnName} 😝`);\n  }\n\n  render() {\n    const columns = this.props.columns;\n    const positions = this.sortData(this.props.positions, columns);\n    return (\n      <div className=\"ResultsList\">\n        <table>\n          <thead>\n            <tr>\n              {\n                columns.map((column, index) => {\n                  return (\n                    <th\n                      key={index}\n                      onClick={column.sortable ? this.handleSort : () => this.snideRemark(column.name) }\n                    >\n                      {column.name}\n                      {this.renderSortImage(column, index)}\n                    </th>\n                  );\n                })\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {\n              positions.map((position, index) => {\n              return (\n                <ResultItem columns={columns} position={position} index={index} />\n              )\n            })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n","\nfunction parseRequestParams(description, location, fullTime) {\n  // TODO: Optimize this clunky mess (with iterator?)\n  let outputString = '';\n  if (description) {\n    outputString += `description=${description.replace(' ', '+')}`;\n  }\n  if (location) {\n    if (outputString) {\n      outputString += '&';\n    }\n    outputString += `location=${location.replace(' ', '+')}`;\n  }\n  if (fullTime) {\n    // full_time defaults to 'off' in GitHub API, so don't include if false\n    if (outputString) {\n      outputString += '&';\n    }\n    outputString += `full_time=on`;\n  }\n  return outputString;\n}\n\nfunction parseDateString(dateString) {\n  let newDate = new Date(dateString);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth();\n  let day = newDate.getDay();\n  if (month < 10) month = '0' + month;\n  if (day < 10) day = '0' + day;\n  return `${year}-${month}-${day}`;\n}\n\nexport const GitHubAPI = {\n  search(description = '', location = '', fullTime = false, stateSetCallback) {\n    const requestParams = parseRequestParams(description, location, fullTime);\n    // Request\n    fetch(`https://jobs.github.com/positions.json?${requestParams}`, {\n      method: 'GET',\n      mode: 'cors'\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Request failed!');\n      }\n    }, networkError => {\n      console.log(networkError.message);\n    })\n    .then(positions => positions.map(({ // destructure each object and return only some of the keys\n      id,\n      title,\n      location,\n      company,\n      type,\n      created_at\n    }) => ({\n      id,\n      title,\n      location,\n      company,\n      type,\n      created_at: parseDateString(created_at)\n    })))\n    .then(data => stateSetCallback(data))\n    .catch(err => alert(err))\n    return;\n  },\n\n  // Make a second method for requestingindividual postings. This one returns\n  // more detailed data, so you can drill down into a single result without\n  // storing detailed data for each result in the list in App.js.\n\n  // We might use this if we were going to add a feature for individual\n  // job listing details. As of yet, this feature is not implemented.\n  getJobInfo(id, stateSetCallback) {\n    fetch(`https://jobs.github.com/positions/${id}.json`)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Request failed!');\n      }\n    }, networkError => {\n      console.log(networkError.message);\n    })\n    // no destructuring for this response; return whole response object\n    .then(data => stateSetCallback(data))\n    .catch(err => alert(err))\n    return;\n  }\n};\n","import React, { Component } from 'react';\nimport './App.css';\n\n// Import Components\nimport { QueriesBar } from '../QueriesBar/QueriesBar';\nimport ResultsList from '../ResultsList/ResultsList';\n\n// Import Utilities\nimport { GitHubAPI } from '../../util/GitHubAPI';\n\n//\nconst columns = [\n  {\n    name: \"Title\",\n    prop: \"title\",\n    sortable: true\n  },\n  {\n    name: \"Location\",\n    prop: \"location\",\n    sortable: true\n  },\n  {\n    name: \"Company\",\n    prop: \"company\",\n    sortable: true\n  },\n  {\n    name: \"Date Posted\",\n    prop: \"created_at\",\n    sortable: true\n  },\n  {\n    name: \"Type\",\n    prop: \"type\",\n    sortable: false\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // set initial state\n    this.state = {\n      searchResults: [],\n    };\n    // bind all methods to component-level \"this.\" As I understand it,\n    // this is unnecessary if methods are declared as arrow functions...\n    // ... but that's not how I learned it initially; I'm sticking with my norms\n    this.search = this.search.bind(this);\n    this.clearResults = this.clearResults.bind(this);\n  }\n\n  search(description, location, fullTime) {\n    GitHubAPI.search(description, location, fullTime, (positions) => {\n      this.setState({\n        searchResults: positions\n      })\n    });\n  }\n\n  clearResults() {\n    this.setState({\n      searchResults: []\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>\n            Search GitHub Job Postings\n          </h1>\n          <p className=\"subtext\">A single-page React applet by Henry Raschke</p>\n        </div>\n        <QueriesBar onSearch={this.search} onClear={this.clearResults} />\n        <ResultsList positions={this.state.searchResults || []} columns={columns} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}